{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/map/map.component.ts","./src/app/components/map/map.component.html","./src/app/components/sidebar/data.ts","./src/app/components/sidebar/searchbar/searchbar.component.ts","./src/app/components/sidebar/searchbar/searchbar.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/services/data.service.ts","./src/app/services/map.service.ts","./src/app/services/sidebar.service.ts","./src/app/services/tensorflow.service.ts","./src/app/services/trendsapi.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts","node-fetch (ignored)","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;;;;;AAOrD,MAAM,YAAY;IAGvB,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFxD,UAAK,GAAG,UAAU,CAAC;IAInB,CAAC;IAED,kBAAkB;QAChB,kCAAkC;QAClC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;IACpC,CAAC;;wEAVU,YAAY;4FAAZ,YAAY;QCPxB,0EACA;QAAA,uEACE;QAAA,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QAExB,qEACD;QAAA,4DAAO;QACP,uEACC;QAAA,qEAAmB;QAEnB,4EAAoC;QAErC,4DAAO;QACP,4DAAO;;6FDLK,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAGQ;AAEW;AACT;AACF;AACQ;AACJ;AACF;AACc;AACd;AACa;AACE;AACjB;AACE;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACA;AACuB;AACb;AACK;AACQ;AACnB;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACwB;AAEL;AACZ;AAC0B;AAChC;AACU;;AA6D3D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAjDJ;YACP,uEAAa;YACb,oEAAgB;YAChB,+EAAkB;YAClB,sEAAc;YACd,oEAAa;YACb,4EAAiB;YACjB,wEAAe;YACf,uEAAc;YACd,qFAAqB;YACrB,uEAAc;YACd,oFAAoB;YACpB,wEAAe;YACf,sFAAqB;YACrB,qEAAa;YACb,4EAAiB;YACjB,uEAAc;YACd,2EAAgB;YAChB,iFAAmB;YACnB,yEAAe;YACf,2EAAgB;YAChB,+EAAkB;YAClB,8EAAiB;YACjB,oEAAa;YACb,sEAAc;YACd,qEAAa;YACb,qEAAa;YACb,2EAAmB;YACnB,+EAAkB;YAClB,oFAAoB;YACpB,4FAAwB;YACxB,uEAAc;YACd,uEAAe;YACf,yEAAe;YACf,2EAAgB;YAChB,yEAAe;YACf,oFAAoB;YACpB,8EAAiB;YACjB,qEAAa;YACb,uEAAc;YACd,qEAAa;YACb,2EAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,6FAAuB;YACvB,oEAAe;YACf,sEAAgB;YAChB,mEAAmB;SACpB;mIAIU,SAAS,mBAzDlB,2DAAY;QACZ,uFAAgB;QAChB,2EAAY;QACZ,qGAAkB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,+EAAkB;QAClB,sEAAc;QACd,oEAAa;QACb,4EAAiB;QACjB,wEAAe;QACf,uEAAc;QACd,qFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,wEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,4EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,oEAAa;QACb,sEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,6FAAuB;QACvB,oEAAe;QACf,sEAAgB;QAChB,mEAAmB;6FAKV,SAAS;cA3DrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uFAAgB;oBAChB,2EAAY;oBACZ,qGAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,+EAAkB;oBAClB,sEAAc;oBACd,oEAAa;oBACb,4EAAiB;oBACjB,wEAAe;oBACf,uEAAc;oBACd,qFAAqB;oBACrB,uEAAc;oBACd,oFAAoB;oBACpB,wEAAe;oBACf,sFAAqB;oBACrB,qEAAa;oBACb,4EAAiB;oBACjB,uEAAc;oBACd,2EAAgB;oBAChB,iFAAmB;oBACnB,yEAAe;oBACf,2EAAgB;oBAChB,+EAAkB;oBAClB,8EAAiB;oBACjB,oEAAa;oBACb,sEAAc;oBACd,qEAAa;oBACb,qEAAa;oBACb,2EAAmB;oBACnB,+EAAkB;oBAClB,oFAAoB;oBACpB,4FAAwB;oBACxB,uEAAc;oBACd,uEAAe;oBACf,yEAAe;oBACf,2EAAgB;oBAChB,yEAAe;oBACf,oFAAoB;oBACpB,8EAAiB;oBACjB,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,2EAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,6FAAuB;oBACvB,oEAAe;oBACf,sEAAgB;oBAChB,mEAAmB;iBACpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9GD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,YAAY;IAEvB,YAAoB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAI,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;IACrB,CAAC;;wEANU,YAAY;4FAAZ,YAAY;QCRzB,qEACA;QAAA,oEAAuB;;6FDOV,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAO,IAAI,MAAM,GAAG;IAChB;QACE,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,CAAC;KACX;IACD;QACE,MAAM,EAAE,KAAK;QACb,OAAO,EAAE,CAAC;KACX;IACD;QACE,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,CAAC;KACX;IACD;QACE,MAAM,EAAE,IAAI;QACZ,OAAO,EAAE,CAAC;KACX;IACD;QACE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,CAAC;KACX;IACD;QACE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,CAAC;KACX;IACD;QACA,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,CAAC;KACT;CACF,CAAC;;;;;;;;;;;;;AC5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;ICKxD,4EAAsG;IAAA,iFAAsB;IAAA,4DAAQ;;;IAyBpI,4EAAmG;IAAA,gFAAqB;IAAA,4DAAQ;;ADtBrI,MAAM,kBAAkB;IAI7B,YAAoB,gBAAkC,EAClC,cAA8B;QAD9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAHlD,YAAO,GAAY,KAAK;QAIxB,WAAM,GAAQ,EAAE;IADqC,CAAC;IAItD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACJ,CAAC;IAED,gDAAgD;IAChD,QAAQ,CAAC,KAAK;QACZ,oBAAoB;QACpB,KAAK,CAAC,cAAc,EAAE;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI;QAEnB,4BAA4B;QAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YAEzB,yCAAyC;YACzC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;gBAC5B,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;gBAC7C,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;aACxC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAEd,gBAAgB;gBAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC;gBACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAC3F,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAClB,CAAC,CAAC;SACH;aAAM;YACL,wBAAwB;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE;gBACtC,+BAA+B;gBAC/B,qCAAqC;gBACrC,KAAK;aACN;YAED,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;gBACzC,+BAA+B;gBAC/B,wCAAwC;gBACxC,KAAK;aACN;SACF;IACH,CAAC;;oFApDU,kBAAkB;kGAAlB,kBAAkB;QCV/B,0EAEI;QAFqC,oJAAY,oBAAgB,IAAC;QAElE,yEACI;QACA,oFACI;QAAA,+EAAoB;QAAA,6EAAkB;QAAA,4DAAY;QAClD,sEACA;QAAA,kHAAsG;QAC1G,4DAAiB;QAGjB,oFACI;QAAA,+EAAoB;QAAA,wEAAa;QAAA,4DAAY;QAC7C,iFACI;QAAA,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC9C,4DAAa;QACb,oHAAmG;QACvG,4DAAiB;QAGjB,2EACJ;QADqD,8IAAS,oBAAgB,IAAC;QAA3E,4DACJ;QAAA,4DAAM;QACV,4DAAO;;QAtCS,qFAAwB;QAOsB,0DAAmD;QAAnD,qHAAmD;QAyBnD,2DAAgD;QAAhD,kHAAgD;;6FDtBjG,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAClB;;;;;;;;;;AAOzB,MAAM,gBAAgB;IAW3B,YAAoB,WAAwB,EAAU,iBAAoC,EAAU,gBAAkC;QAAlH,gBAAW,GAAX,WAAW,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QATtI,SAAI,GAAU,CAAC,GAAG,EAAC,IAAI,CAAC;QACxB,UAAU;QACV,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,IAAI,CAAC;QAE3B,gBAAW,GAAG;YACZ,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;SAC3E,CAAC;QAGA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,oDAAM,EAAE,CAAC,CAAC;IAClC,CAAC;IAGD,UAAU,CAAC,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;SACvC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;;gFA9BU,gBAAgB;gGAAhB,gBAAgB;;QCdzB,0FAEE;QAAA,oFACE;QAAA,4EACI;QADsC,oRAAS,YAAe,IAAC;QAC/D,uEAAM;QAAA,iEAAO;QAAA,4DAAO;QACxB,4DAAS;QACT,8EAAwC;QAExC,yEAEA;QAAA,yEACE;QAAA,oFAIoB;QAGtB,oFAQa;QAFX,mJAAS,sBAAkB,IAAC;QAE9B,4DAAa;QACb,wEAAM;QAAA,wDAAmB;QAAA,4DAAO;QAEhC,4DAAM;QACN,2EACE;QAAA,qEAAG;QAAA,+SAAmP;QAAA,4DAAI;QAC5P,4DAAM;QACR,4DAAM;QAER,4DAAc;QAEhB,4DAAuB;QAEvB,2EACI;QAAA,8EACA;QADwC,qRAAS,YAAe,IAAC;QACjE,0EACA;QAAA,4DAAS;QACb,4DAAM;;;;QA3CoD,+EAAyB;QAYzE,0DAAa;QAAb,0EAAa;QAQf,0DAA2B;QAA3B,wFAA2B;QAOvB,0DAAmB;QAAnB,0EAAmB;;6FDbpB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,WAAW;IAItB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAHlD,WAAM,GAAQ,EAAE;IAGsC,CAAC;IAEvD,OAAO,CAAC,CAAC;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvF,gCAAgC;QAChC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;;sEAVU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;AACtB;;AAM9B,MAAM,UAAU;IAErB;IAEA,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,6CAAY,CAAC;YAC1B,WAAW,EAAE,wEAAW,CAAC,MAAM,CAAC,KAAK;YACrC,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,qDAAqD;YAC5D,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;YACvB,IAAI,EAAE,CAAC;SACR,CAAC;IACJ,CAAC;;oEAdU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAsD;AAEW;;AAM1D,MAAM,cAAc;IAQzB;QAPQ,mBAAc,GAA0B,EAAE;QAC1C,eAAU,GAAyB,IAAI,oDAAe,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5E,cAAS,GAAoB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;QAE1D,gBAAW,GAA0B,EAAE;QACvC,YAAO,GAAyB,IAAI,oDAAe,CAAC,IAAI,CAAC,WAAW,CAAC;QACtE,WAAM,GAAoB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;IAC9C,CAAC;IAGf,cAAc,CAAC,UAAU;QACvB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACxD,IAAI,SAAS,GAAG,EAAE,CAAC;YAClB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;SAE3B;QACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;IAC7B,CAAC;IACH,gBAAgB,CAAC,OAAO,EAAE,KAAK;QAC7B,OAAO,OAAO,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;QAC1B,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;IAC/B,CAAC;;4EA/BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACI;AAClC;;;AAM/B,MAAM,iBAAiB;IAuB5B,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAVtD,sBAAsB;QACtB,WAAM,GAAW,EAAE;QACnB,UAAK,GAAW,EAAE;QAClB,eAAU,GAAW,CAAC;QACtB,cAAS,GAAW,CAAC;QASnB,+BAA+B;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1E,IAAI,CAAC,WAAW,GAAG,IAAI;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,KAAK,EAAE;QACd,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,8CAA8C;QAC9C,gEAAkB,CAAC,0EAAW,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;aAC9D,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;YAC1C,IAAI,CAAC,KAAK,GAAG,UAAU;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;IAED,2CAA2C;IAC3C,aAAa,CAAC,OAAe;QAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;YAClC,+BAA+B;YAC/B,IAAI,QAAQ,GAAG,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACtC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,EAAE;oBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACnF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;oBAC9B,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,YAAY,GAAG,QAAQ;oBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,+BAA+B;IAC/B,aAAa;QACX,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,MAAM,GAAa,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;YAC7D,IAAI,SAAS,GAAa,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7D,IAAI,CAAC,QAAQ,GAAG,uDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,uDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACvD;IAEH,CAAC;IAED,iCAAiC;IACjC,QAAQ,CAAC,GAAU;QACjB,IAAI,MAAM,GAAU,EAAE;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC,GAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,EAAE;gBAClC,MAAK;aACN;iBAAM;gBACL,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,UAAU,GAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACpF;SACF;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,MAAM;IACf,CAAC;IAED,4BAA4B;IAC5B,KAAK;QACH,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBACjB,SAAS,EAAE,sDAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBAChC,IAAI,EAAE,uDAAS,CAAC,gBAAgB;gBAChC,OAAO,EAAE,CAAC,UAAU,CAAC;aACtB,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;gBAC9C,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,SAAS,EAAE,EAAE;aACd,CAAC;iBACD,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YAC3C,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAClB,CAAC,CAAC;SACH;IACH,CAAC;IAED,OAAO;IAEP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;IACrC,CAAC;;kFAtHU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACQ;AAEL;;;AAK/C,MAAM,gBAAgB;IAK3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,6BAA6B;QACrB,kBAAa,GAAyB,IAAI,oDAAe,CAAC,EAAE,CAAC;QAC9D,iBAAY,GAAoB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;IAIxE,CAAC;IAED,kCAAkC;IAClC,6BAA6B;IAC7B,iCAAiC;IACjC,IAAI;IACJ,OAAO,CAAC,MAAW;QACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,OAAO,CAAC,SAAS,EAAE;gBAChD,MAAM;aACP,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC;YACd,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACT,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;IAEX,CAAC;;gFA5BU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAEhB,OAAO,EAAE;QACP,OAAO,EAAE,0CAA0C;KACpD;IAED,MAAM,EAAE;QACN,KAAK,EAAE,8FAA8F;QACrG,SAAS,EAAE,mDAAmD;KAC/D;CACF;;;;;;;;;;;;;ACXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IAEjB,OAAO,EAAE;QACP,SAAS,EAAE,8BAA8B;QACzC,OAAO,EAAE,+BAA+B;KACzC;IAED,MAAM,EAAE;QACN,KAAK,EAAE,8FAA8F;QACrG,SAAS,EAAE,mDAAmD;KAC/D;CACF;AAGD;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AC1BnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { TensorflowService } from './services/tensorflow.service';\r\nimport { Component, AfterContentInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements AfterContentInit{\r\n  title = 'EnVision';\r\n\r\n  constructor(private TensorflowService: TensorflowService) {\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // call tf service to import model\r\n    this.TensorflowService.loadModel()\r\n  }\r\n}\r\n"," <!DOCTYPE html>\r\n <html lang=\"en\">\r\n <head>\r\n   <title>Document</title>\r\n    <!-- mapbox css import -->\r\n  <link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet'/>\r\n </head>\r\n <body>\r\n  <app-map></app-map>\r\n\r\n  <app-sidebar class=\"\"></app-sidebar>\r\n\r\n </body>\r\n </html>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { ResizableModule  } from 'angular-resizable-element';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { SearchbarComponent } from './components/sidebar/searchbar/searchbar.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    MapComponent,\r\n    SearchbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    BrowserAnimationsModule,\r\n    NgxChartsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MapService } from 'src/app/services/map.service'\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  constructor(private map:MapService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.map.buildMap()\r\n  }\r\n\r\n}\r\n","<link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet'/>\r\n<div id='mapbox'></div>\r\n","export var single = [\r\n    {\r\n      \"name\": \"Germany\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"name\": \"USA\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"name\": \"France\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"name\": \"UK\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"name\": \"Italy\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"name\": \"Spain\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n    \"name\": \"Canada\",\r\n    \"value\": 1\r\n    }\r\n  ];\r\n","import { TrendsapiService } from './../../../services/trendsapi.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SidebarService } from  './../../../services/sidebar.service'\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'app-searchbar',\r\n  templateUrl: './searchbar.component.html',\r\n  styleUrls: ['./searchbar.component.scss']\r\n})\r\nexport class SearchbarComponent implements OnInit {\r\n  searchForm: FormGroup\r\n  clicked: boolean = false\r\n\r\n  constructor(private trendsapiService: TrendsapiService,\r\n              private sidebarService: SidebarService) {}\r\n  byDate: any = []\r\n  private arraybyDate: Subscription\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = new FormGroup({\r\n      'keyword': new FormControl(null, Validators.required),\r\n      'year': new FormControl(null, Validators.required),\r\n    })\r\n  }\r\n\r\n  // search is performed either by button or enter\r\n  onSubmit(event) {\r\n    // stop page refresh\r\n    event.preventDefault()\r\n    this.clicked = true\r\n\r\n    // check if form is complete\r\n    if (this.searchForm.valid) {\r\n\r\n      // use getData to get backend information\r\n      this.trendsapiService.getData({\r\n        keyword: this.searchForm.get('keyword').value,\r\n        year: this.searchForm.get('year').value,\r\n      }).then((res) => {\r\n\r\n        // parse by week\r\n        this.sidebarService.parseCountries(res)\r\n        this.arraybyDate = this.sidebarService.byDate.subscribe((byDate) => this.byDate = byDate)\r\n      }).catch((err) => {\r\n        console.log(err)\r\n      })\r\n    } else {\r\n      // look for invalid year\r\n      if (!this.searchForm.get('year').valid) {\r\n        // this.searchForm.patchValue({\r\n        //   keyword: 'Must envision a year!'\r\n        // })\r\n      }\r\n\r\n      // look for invalid keyword\r\n      if (!this.searchForm.get('keyword').valid) {\r\n        // this.searchForm.patchValue({\r\n        //   keyword: 'Must envision something!'\r\n        // })\r\n      }      \r\n    }    \r\n  }\r\n}\r\n","<form id=\"form\" [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit($event)\" autocomplete=\"off\">\r\n\r\n    <div class=\"row\">\r\n        <!-- keyword -->\r\n        <mat-form-field class=\"col-6\">\r\n            <mat-label class=\"\">Search for a trend</mat-label>\r\n            <input matInput class=\"\" formControlName=\"keyword\" id=\"seachInput\" type=\"text\" placeholder=\"ex: #BLM\" aria-placeholder=\"ex: #BLM\">\r\n            <small id=\"passwordHelpBlock\" class=\"text-danger\" *ngIf=\"!searchForm.get('keyword').valid && clicked\">Must Envision a trend!</small>\r\n        </mat-form-field>\r\n\r\n        <!-- year -->\r\n        <mat-form-field class=\"col-4\">\r\n            <mat-label class=\"\">Select a year</mat-label>\r\n            <mat-select formControlName=\"year\">\r\n                <mat-option value=\"2004\">2004</mat-option>\r\n                <mat-option value=\"2005\">2005</mat-option>\r\n                <mat-option value=\"2006\">2006</mat-option>\r\n                <mat-option value=\"2007\">2007</mat-option>\r\n                <mat-option value=\"2008\">2008</mat-option>\r\n                <mat-option value=\"2009\">2009</mat-option>\r\n                <mat-option value=\"2010\">2010</mat-option>\r\n                <mat-option value=\"2011\">2011</mat-option>\r\n                <mat-option value=\"2012\">2012</mat-option>\r\n                <mat-option value=\"2013\">2013</mat-option>\r\n                <mat-option value=\"2014\">2014</mat-option>\r\n                <mat-option value=\"2015\">2015</mat-option>\r\n                <mat-option value=\"2016\">2016</mat-option>\r\n                <mat-option value=\"2017\">2017</mat-option>\r\n                <mat-option value=\"2018\">2018</mat-option>\r\n                <mat-option value=\"2019\">2019</mat-option>\r\n                <mat-option value=\"2020\">2020</mat-option>\r\n            </mat-select>\r\n            <small id=\"passwordHelpBlock\" class=\"text-danger\" *ngIf=\"!searchForm.get('year').valid && clicked\">Must Envision a year!</small>\r\n        </mat-form-field>       \r\n\r\n        <!-- submit button -->\r\n        <img class=\"col-2 img\" src=\"assets/img/logo.png\" (click)=\"onSubmit($event)\">\r\n    </div>   \r\n</form>","import { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { TensorflowService } from './../../services/tensorflow.service';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { TrendsapiService } from './../../services/trendsapi.service';\r\nimport { DataService } from './../../services/data.service'\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { single } from './data';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  single: any[];\r\n  view: any[] = [240,1500]\r\n  // options\r\n  showLegend: boolean = true;\r\n  showLabels: boolean = true;\r\n\r\n  colorScheme = {\r\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\r\n  };\r\n\r\n  constructor(private DataService: DataService, private TensorflowService: TensorflowService, private trendsapiService: TrendsapiService) {\r\n    Object.assign(this, { single });\r\n  }\r\n\r\n\r\n  changeDate(date){\r\n    console.log(this.DataService.getData(date.value))\r\n   Object.assign(this,this.DataService.getData(date.value))\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  formatLabel(value: number) {\r\n    if (value >= 1000) {\r\n      return Math.round(value / 1000) + 'k';\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n}\r\n","\r\n    <mat-drawer-container class=\"example-sidenav-container\" [hidden]='!drawer.opened' autosize>\r\n\r\n      <mat-sidenav #drawer class=\"container-fluid\" mode=\"side\" opened='true'>\r\n        <button class=\"\" mat-button id='closeBtn' (click)=\"drawer.toggle()\">\r\n            <span>&times;</span>\r\n        </button>\r\n        <app-searchbar class=\"\"></app-searchbar>\r\n\r\n        <div class=\"row outer\">\r\n\r\n        <div class=\"col-6 inner\">\r\n          <ngx-charts-pie-grid class\r\n            [view]=\"view\"\r\n            [scheme]=\"colorScheme\"\r\n            [results]=\"single\">\r\n        </ngx-charts-pie-grid>\r\n\r\n\r\n        <mat-slider\r\n          #matslider\r\n          [displayWith]=\"formatLabel\"\r\n          min=\"1\"\r\n          max=\"56\"\r\n          [value] = \"matslider\"\r\n          (input)='changeDate($event)'\r\n          >\r\n        </mat-slider>\r\n        <span>{{matslider.value}}</span>\r\n\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur rerum vel ipsam a corrupti perferendis, perspiciatis recusandae obcaecati cumque iusto doloremque voluptatum architecto exercitationem eveniet commodi rem provident animi at!</p>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-sidenav>\r\n\r\n  </mat-drawer-container>\r\n\r\n  <div id=\"openBtn\">\r\n      <button type=\"button\" mat-raised-button (click)=\"drawer.toggle()\">\r\n      Open Sidebar\r\n      </button>\r\n  </div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { SidebarService } from  './sidebar.service'\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  byDate: any = []\r\n  private arraybyDate: Subscription\r\n\r\n  constructor(private sidebarService: SidebarService) { }\r\n\r\n  getData(i){\r\n  this.arraybyDate = this.sidebarService.byDate.subscribe((byDate)=>this.byDate = byDate)\r\n  // console.log(this.arraybyDate)\r\n  return (this.arraybyDate)[i]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as Mapboxgl from 'mapbox-gl'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  map: Mapboxgl.Map\r\n  constructor() {\r\n\r\n  }\r\n\r\n  buildMap() {\r\n    this.map = new Mapboxgl.Map({\r\n      accessToken: environment.mapbox.token,\r\n      container: 'mapbox', // container id\r\n      style: 'mapbox://styles/travelnet/ckb47dkvn0dh31ila3aizjqlt',\r\n      center: [-71.22, 46.85], // starting position\r\n      zoom: 2, // starting zoom\r\n    })\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { CountriesModel } from './../components/sidebar/countries.model'\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarService implements OnDestroy{\r\n  private CountriesArray: Array<CountriesModel> = []\r\n  private _countries: BehaviorSubject<any> = new BehaviorSubject(this.CountriesArray)\r\n  public countries: Observable<any> = this._countries.asObservable()\r\n\r\n  private byDateArray: Array<CountriesModel> = []\r\n  private _byDate: BehaviorSubject<any> = new BehaviorSubject(this.byDateArray)\r\n  public byDate: Observable<any> = this._byDate.asObservable()\r\n  constructor(){}\r\n\r\n\r\n  parseCountries(_countries):any{\r\n    let parsedData = [];\r\n    for (var i = 0; i< (_countries.data)[0].data.length; i++){\r\n     let parsedDay = [];\r\n      (_countries.data).forEach(country => {\r\n        parsedDay.push((country.data)[i])\r\n        });\r\n        parsedData.push(parsedDay)\r\n\r\n      }\r\n    console.log(parsedData)\r\n    this._byDate.next(parsedData)\r\n    }\r\n  getCountriesData(_byDate, index ):any{\r\n    return _byDate[index]\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._byDate.unsubscribe()\r\n    this._countries.unsubscribe()\r\n  }\r\n\r\n}\r\n","import { CountriesModel } from './../components/sidebar/countries.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { TrendsapiService } from './trendsapi.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from './../../environments/environment.prod';\r\nimport { Injectable, OnDestroy, AfterContentInit } from '@angular/core';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport { prepareSyntheticListenerName } from '@angular/compiler/src/render3/util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TensorflowService implements OnDestroy {\r\n  // store imported model\r\n  private Model: tf.LayersModel\r\n\r\n  // subscription from trendsapi\r\n  private receivedData_sub: Subscription\r\n\r\n  // store data from subscription\r\n  public presentData: {[key: string]: any}\r\n\r\n  // data from selected country\r\n  selectedData: number[]\r\n\r\n  // training parameters\r\n  epochs: number = 45\r\n  split: number = 40\r\n  windowSize: number = 8\r\n  batchSize: number = 3\r\n\r\n  // finished dataset\r\n  trainSet: tf.Tensor\r\n  validateSet: tf.Tensor\r\n\r\n  constructor(private TrendsapiService: TrendsapiService) {\r\n\r\n\r\n    // subscribe to trendsapi calls\r\n    this.receivedData_sub = this.TrendsapiService.receivedData.subscribe(data => {\r\n      this.presentData = data\r\n      this.selectCountry('US')\r\n      this.createDataset()\r\n      this.train()\r\n    })\r\n  }\r\n\r\n  loadModel() {\r\n    // import keras model from backend w/o weights\r\n    tf.loadLayersModel(environment.backend.Tfmodel, {strict:false})\r\n    .then((layerModel) => {\r\n      console.log('model imported successfully')\r\n      this.Model = layerModel\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  // setup training data for selected country\r\n  selectCountry(country: string) {\r\n    if (this.Model && this.presentData) {\r\n      // get all values for 1 country\r\n      let selected = []\r\n      this.presentData.data.forEach(element => {\r\n        if (element.country == country) {\r\n          this.presentData.data[this.presentData.data.indexOf(element)].data.forEach(element => {\r\n            selected.push(element.value)\r\n          });\r\n          this.selectedData = selected\r\n          console.log(this.selectedData)\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // creates dataset for training\r\n  createDataset() {\r\n    if (this.selectedData) {\r\n      let _train: number[] = this.selectedData.slice(0, this.split)\r\n      let _validate: number[] = this.selectedData.slice(this.split)\r\n      this.trainSet = tf.tensor(this.sliceArr(_train))\r\n      this.validateSet = tf.tensor(this.sliceArr(_validate))\r\n    }\r\n\r\n  }\r\n\r\n  // slice arrays for createDataset\r\n  sliceArr(arr: any[]): any {\r\n    let tensor: any[] = []\r\n    for (let x = 0; x < arr.length; x++) {\r\n      if (x+this.windowSize > arr.length) {\r\n        break\r\n      } else {\r\n        tensor.push([arr.slice(x, (x+this.windowSize -1)), [arr[x+(this.windowSize - 1)]]])\r\n      }\r\n    }\r\n    console.log(tensor)\r\n    return tensor\r\n  }\r\n\r\n  // compile & train the model\r\n  train() {\r\n    if (this.Model) {\r\n      this.Model.compile({\r\n        optimizer: tf.train.adam(0.0001),\r\n        loss: tf.losses.meanSquaredError,\r\n        metrics: ['accuracy']\r\n      })\r\n      this.Model.fit(this.trainSet, this.validateSet, {\r\n        epochs: this.epochs,\r\n        batchSize: this.batchSize,\r\n        callbacks: []\r\n      })\r\n      .then((info) => {\r\n        console.log('complete', info.history.acc)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  predict() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.receivedData_sub.unsubscribe()\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrendsapiService implements OnDestroy {\r\n  // observables for tf service\r\n  private _receivedData: BehaviorSubject<any> = new BehaviorSubject('')\r\n  public receivedData: Observable<any> = this._receivedData.asObservable()\r\n\r\n  constructor(private http: HttpClient) { \r\n    \r\n  }  \r\n\r\n  // params must be an object with {\r\n  //  keyword: keyword (string)\r\n  //  year: year (string or number)\r\n  // }\r\n  getData(params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get<any>(environment.backend.trendsapi, {\r\n        params \r\n      }).subscribe((res) => {\r\n        this._receivedData.next(res)\r\n        resolve(res)\r\n      }, (err) => {\r\n        reject(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n}","export const environment = {\r\n  production: true,\r\n\r\n  backend: {\r\n    Tfmodel: 'http://localhost:3000/Tfmodel/model.json'\r\n  },\r\n\r\n  mapbox: {\r\n    token: 'pk.eyJ1IjoidHJhdmVsbmV0IiwiYSI6ImNrYjJ4bnpxZDBnMHUydG10cXJmeGNjazEifQ.Z2ajmP1ywUc77Z74VlXmWw',\r\n    geocoding: 'https://api.mapbox.com/geocoding/v5/mapbox.places'\r\n  },\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  backend: {\r\n    trendsapi: 'http://localhost:3000/search',\r\n    Tfmodel: 'http://localhost:3000/Tfmodel'\r\n  },\r\n\r\n  mapbox: {\r\n    token: 'pk.eyJ1IjoidHJhdmVsbmV0IiwiYSI6ImNrOTk3cHkwaDAzaHkzZHEwMm03ZGN0MG8ifQ.j24u0Q5RbYw7PW4tVpGjmQ',\r\n    geocoding: 'https://api.mapbox.com/geocoding/v5/mapbox.places'\r\n  },\r\n}\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}